{"version":3,"file":"734.e7af68d0d1310e05fa14.js","mappings":"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","sources":["./src/app/pages/auth/pages/registration/registration-routing.module.ts","./src/app/pages/auth/pages/registration/registration.component.ts","./src/app/pages/auth/pages/registration/registration.component.html","./src/app/pages/auth/pages/registration/registration.module.ts","./src/app/shared/utils/data.ts","./src/app/shared/utils/form.ts","./src/app/shared/utils/index.ts","./src/app/shared/utils/regex.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { RegistrationComponent } from './registration.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegistrationComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class RegistrationRoutingModule { }\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { regexErrors, regex, markFormGroupTouched } from '@app/shared/utils';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport * as fromRoot from '@app/store';\nimport * as fromUser from '@app/store/user';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RegistrationComponent implements OnInit {\n  form !: FormGroup;\n  regexErrors = regexErrors;\n  loading$ !: Observable<boolean | null>;\n\n  constructor(\n    private fb: FormBuilder,\n    private store: Store<fromRoot.State>\n  ) { }\n\n  ngOnInit(): void {\n      this.loading$ = this.store.pipe(select(fromUser.getLoading));\n\n      this.form = this.fb.group({\n        email: [null, {\n          updateOn: 'blur', validators: [\n            Validators.required,\n            Validators.maxLength(128),\n            Validators.pattern(regex.email)\n          ]\n        }],\n        username: [null, {\n          updateOn: 'blur', validators: [\n            Validators.required\n          ]\n        }],\n        nombre: [null, {\n          updateOn: 'blur', validators: [\n            Validators.required\n          ]\n        }],\n        apellido: [null, {\n          updateOn: 'blur', validators: [\n            Validators.required\n          ]\n        }],\n        password: [null, {\n          updateOn: 'blur', validators: [\n            Validators.required,\n            Validators.minLength(6),\n            Validators.maxLength(30),\n            Validators.pattern(regex.password)\n          ]\n        }],\n        passwordRepeat: [null, {\n          updateOn: 'blur', validators: [\n            Validators.required,\n            Validators.minLength(6),\n            Validators.maxLength(30),\n            Validators.pattern(regex.password)\n          ]\n        }],\n\n\n      }, {validator: this.repeatPasswordValidator})\n\n\n  }\n\n\n  private repeatPasswordValidator(group: FormGroup): {[key: string]: boolean} | null {\n    const password = group.get('password');\n    const passwordRepeat = group.get('passwordRepeat');\n\n    return passwordRepeat?.value && password?.value !== passwordRepeat.value\n          ? {repeat : true}\n          : null;\n  }\n\n\n  onSubmit() : void {\n\n      if( this.form.valid){\n        const value = this.form.value;\n\n        const userCreateRequest: fromUser.UserCreateRequest = {\n          email : value.email,\n          password: value.password,\n          nombre: value.nombre,\n          apellido: value.apellido,\n          username: value.username\n        }\n\n        this.store.dispatch(new fromUser.SignUpEmail(userCreateRequest));\n\n      }else{\n        markFormGroupTouched(this.form);\n      }\n\n\n  }\n\n\n}\n","<div class=\"app-page\">\n  <div class=\"app-page__header\">\n    <h1>Registro de Usuario</h1>\n  </div>\n\n  <form [formGroup]=\"form\" (submit)=\"onSubmit()\" (keyup.enter)=\"onSubmit()\" novalidate autocomplete=\"off\">\n\n    <div class=\"app-page__content\">\n      <app-form-field label=\"E-Mail\" [required]=\"true\" [control]=\"form.controls.email\" [isInline]=\"false\"\n        [patternError]=\"regexErrors.email\">\n        <app-input formControlName=\"email\"></app-input>\n      </app-form-field>\n\n\n      <app-form-field label=\"Username\" [required]=\"true\" [control]=\"form.controls.username\" [isInline]=\"false\">\n        <app-input formControlName=\"username\"></app-input>\n      </app-form-field>\n\n      <app-form-field label=\"Nombre\" [required]=\"true\" [control]=\"form.controls.nombre\" [isInline]=\"false\">\n        <app-input formControlName=\"nombre\"></app-input>\n      </app-form-field>\n\n      <app-form-field label=\"Apellido\" [required]=\"true\" [control]=\"form.controls.apellido\" [isInline]=\"false\">\n        <app-input formControlName=\"apellido\"></app-input>\n      </app-form-field>\n\n      <app-form-field label=\"Password\" [required]=\"true\" [control]=\"form.controls.password\" [isInline]=\"false\"\n        [patternError]=\"regexErrors.password\">\n        <app-password formControlName=\"password\"></app-password>\n      </app-form-field>\n\n\n      <app-form-field label=\"Repite Password\" [required]=\"true\" [control]=\"form.controls.passwordRepeat\"\n        [isInline]=\"false\" [patternError]=\"regexErrors.password\">\n        <app-password formControlName=\"passwordRepeat\"></app-password>\n      </app-form-field>\n\n      <div class=\"error\" [class.error_active]=\"form.hasError('repeat')\">\n        El password no concuerda\n      </div>\n\n    </div>\n\n    <div class=\"app-page__footer\">\n      <app-button type=\"submit\">Enviar</app-button>\n    </div>\n\n  </form>\n\n  <app-spinner *ngIf=\"loading$ | async\"></app-spinner>\n\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { RegistrationRoutingModule } from './registration-routing.module';\nimport { RegistrationComponent } from './registration.component';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormFieldModule, InputModule, PasswordModule } from '@app/shared/controls';\nimport { ButtonModule } from '@app/shared/buttons';\nimport { SpinnerModule } from '@app/shared/indicators';\n\n\n@NgModule({\n  declarations: [\n    RegistrationComponent\n  ],\n  imports: [\n    CommonModule,\n    RegistrationRoutingModule,\n    RouterModule,\n    ReactiveFormsModule,\n    FormFieldModule,\n    InputModule,\n    PasswordModule,\n    ButtonModule,\n    SpinnerModule\n  ]\n})\nexport class RegistrationModule { }\n","import { DocumentChangeAction } from \"@angular/fire/compat/firestore\";\n\ninterface Item {\n    id? : string;\n    [key: string] : any;\n}\n\nexport const extractDocumentChangeActionData = (x: DocumentChangeAction<any>, addId =true ): Item | any => {\n    const data = x.payload.doc.data();\n\n    if(addId){\n        data.id = x.payload.doc.id;\n    }\n\n    return data;\n}\n","import  {ControlItem} from '@app/models/frontend';\n\nexport const markFormGroupTouched = (formGroup: any) => {\n  (Object as any).values(formGroup.controls).forEach((control: any) => {\n      control.markAsTouched();\n\n      if(control.controls){\n        markFormGroupTouched(control);\n      }\n\n  })\n}\n\nexport interface Control {\n  items? : ControlItem[];\n  changed? : () => void;\n  map?: (() => void) | any;\n}\n\nexport interface ControlEntities {\n  [key: string] : Control;\n}\n\nexport const  mapControls = (controls: ControlEntities) : void => {\n  Object.keys(controls).forEach( (key:string) => {\n    if(controls[key].map){\n      controls[key].map();\n    }\n  })\n}","export * from './regex';\nexport * from './form';\nexport * from './data';\n","/* tslint:disable:max-line-length */\nexport const regex = {\n\temail: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n\tpassword: /^(?:(?=.*[a-z])(?:(?=.*[A-Z])(?=.*[\\d\\W])|(?=.*\\W)(?=.*\\d))|(?=.*\\W)(?=.*[A-Z])(?=.*\\d)).{8,}$/,\n\tnumber: /^\\d+$/,\n};\n\nexport const regexErrors = {\n\temail: 'El email es incorrecto',\n\tpassword: 'El password debe contener una letra mayuscula, minuscula, un numero y un caracter especial',\n\tnumber: 'Solo puede ingresar numeros'\n}\n"],"names":[],"sourceRoot":"webpack:///"}