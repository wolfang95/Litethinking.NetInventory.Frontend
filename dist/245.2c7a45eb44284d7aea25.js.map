{"version":3,"file":"245.2c7a45eb44284d7aea25.js","mappings":"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","sources":["./src/app/pages/company/product-routing.module.ts","./src/app/pages/company/product.module.ts","./src/app/pages/company/store/form/form.actions.ts","./src/app/pages/company/store/form/form.reducer.ts","./src/app/pages/company/store/index.ts","./src/app/pages/company/store/save/save.actions.ts","./src/app/pages/company/store/save/save.effects.ts","./src/app/pages/company/store/save/save.reducer.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: 'new',\n    loadChildren: () => import('./pages/new-product/new-product.module').then(m=>m.NewProductModule)\n  },\n  {\n    path: ':id',\n    loadChildren: () => import('./pages/update-product/update-product.module').then(m=>m.UpdateProductModule)\n  },\n  {\n    path: '**',\n    pathMatch: 'full',\n    redirectTo: 'login'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ProductRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ProductRoutingModule } from './product-routing.module';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport {reducers, effects} from './store';\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    ProductRoutingModule,\n    StoreModule.forFeature('product', reducers),\n    EffectsModule.forFeature(effects)\n\n  ]\n})\nexport class ProductModule { }\n","\r\nimport { Action } from \"@ngrx/store\";\r\nimport { ProductForm } from \"./form.models\";\r\n\r\nexport enum Types {\r\n  SET = '[Product] [Form] Set',\r\n  UPDATE = '[Product] [Form] Update',\r\n  CLEAR = '[Product] [Form] Clear',\r\n}\r\n\r\n\r\nexport class Set implements Action {\r\n  readonly type = Types.SET;\r\n  constructor(public form: ProductForm){}\r\n}\r\n\r\nexport class Update implements Action {\r\n  readonly type = Types.UPDATE;\r\n  constructor(public changes: Partial<ProductForm>){}\r\n}\r\n\r\nexport class Clear implements Action {\r\n  readonly type = Types.CLEAR;\r\n  constructor(){}\r\n}\r\n\r\nexport type All = Set | Update | Clear;\r\n","import { ProductForm } from \"./form.models\";\r\nimport * as fromActions from './form.actions';\r\n\r\nexport type FormState = ProductForm;\r\n\r\nconst initialState: FormState = {\r\n  nombre: null,\r\n  descripcion: null,\r\n  categoria: null,\r\n  marca: null,\r\n  photoURL: null,\r\n  precio: null,\r\n  stock: null\r\n}\r\n\r\nexport function reducer(state = initialState, action: fromActions.All | any): FormState {\r\n\r\n  switch (action.type) {\r\n    case fromActions.Types.SET: {\r\n      return { ...state, ...action.form }\r\n    }\r\n\r\n    case fromActions.Types.UPDATE: {\r\n      return { ...state, ...action.changes }\r\n    }\r\n\r\n    case fromActions.Types.CLEAR: {\r\n      return { ...initialState }\r\n    }\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n\r\n  }\r\n\r\n\r\n}\r\n","import { ListEffects } from './save/save.effects';\r\nimport { ActionReducerMap, createFeatureSelector } from '@ngrx/store';\r\nimport * as fromList from './save/save.reducer';\r\nimport * as fromForm from './form/form.reducer';\r\n\r\nexport interface ProductState {\r\n  form: fromForm.FormState,\r\n  list: fromList.ListState\r\n}\r\n\r\nexport const reducers : ActionReducerMap<ProductState> = {\r\n  form: fromForm.reducer,\r\n  list: fromList.reducer\r\n}\r\n\r\nexport const effects : any[] = [\r\n  ListEffects\r\n]\r\n\r\nexport const getProductState = createFeatureSelector<ProductState>('product');\r\n","import { Action } from \"@ngrx/store\";\r\nimport { ProductResponse, ProductCreateRequest, ProductUpdateRequest } from \"./save.models\";\r\n\r\nexport enum Types {\r\n  CREATE = '[Product] Create: Start',\r\n  CREATE_SUCCESS = '[Product] Create: Success',\r\n  CREATE_ERROR = '[Product] Create: Error',\r\n\r\n  UPDATE = '[Product] Update: Start',\r\n  UPDATE_SUCCESS = '[Product] Update: Success',\r\n  UPDATE_ERROR = '[Product] Update: Error',\r\n\r\n  READ = '[Product] Read: Start',\r\n  READ_SUCCESS = '[Product] Read: Success',\r\n  READ_ERROR = '[Product] Read: Error',\r\n}\r\n\r\nexport class Create implements Action{\r\n  readonly type = Types.CREATE;\r\n  constructor(public product: ProductCreateRequest){}\r\n}\r\n\r\nexport class CreateSuccess implements Action{\r\n  readonly type = Types.CREATE_SUCCESS;\r\n  constructor(public product: ProductResponse){}\r\n}\r\n\r\nexport class CreateError implements Action{\r\n  readonly type = Types.CREATE_ERROR;\r\n  constructor(public error: string){}\r\n}\r\n\r\n\r\n//UPDATE\r\nexport class Update implements Action{\r\n  readonly type = Types.UPDATE;\r\n  constructor(public id: string, public product: ProductUpdateRequest){}\r\n}\r\n\r\nexport class UpdateSuccess implements Action{\r\n  readonly type = Types.UPDATE_SUCCESS;\r\n  constructor(public product: ProductResponse){}\r\n}\r\n\r\nexport class UpdateError implements Action{\r\n  readonly type = Types.UPDATE_ERROR;\r\n  constructor(public error: string){}\r\n}\r\n\r\n//get product por id\r\nexport class Read implements Action{\r\n  readonly type = Types.READ;\r\n  constructor(public id: string){}\r\n}\r\n\r\nexport class ReadSuccess implements Action{\r\n  readonly type = Types.READ_SUCCESS;\r\n  constructor(public product: ProductResponse){}\r\n}\r\n\r\nexport class ReadError implements Action{\r\n  readonly type = Types.READ_ERROR;\r\n  constructor(public error: string){}\r\n}\r\n\r\nexport type All =\r\n              Create\r\n            | CreateSuccess\r\n            | CreateError\r\n            | Update\r\n            | UpdateSuccess\r\n            | UpdateError\r\n            | Read\r\n            | ReadSuccess\r\n            | ReadError;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\r\nimport { environment } from '@src/environments/environment';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, delay, map, switchMap, tap } from 'rxjs/operators';\r\nimport * as fromActions from './save.actions';\r\nimport { ProductCreateRequest, ProductResponse, ProductUpdateRequest } from './save.models';\r\n\r\n\r\ntype Action = fromActions.All;\r\n\r\n@Injectable()\r\nexport class ListEffects {\r\n\r\n  constructor(\r\n    private action: Actions,\r\n    private httpClient: HttpClient,\r\n    private router: Router\r\n  ) { }\r\n\r\n  create: Observable<Action> = createEffect(() =>\r\n    this.action.pipe(\r\n      ofType(fromActions.Types.CREATE),\r\n      map((action: fromActions.Create) => action.product),\r\n      switchMap((request: ProductCreateRequest) =>\r\n        this.httpClient.post<ProductResponse>(`${environment.url}/api/Producto`, request)\r\n          .pipe(\r\n            delay(1000),\r\n            tap( (product: ProductResponse) => {\r\n                this.router.navigate(['/shop']);\r\n            }),\r\n            map((product: ProductResponse) => new fromActions.CreateSuccess(product)),\r\n            catchError(err => of(new fromActions.CreateError(err.message)))\r\n          )\r\n      )\r\n    )\r\n  );\r\n\r\n\r\n  update: Observable<Action> = createEffect(() =>\r\n    this.action.pipe(\r\n      ofType(fromActions.Types.UPDATE),\r\n      switchMap((action: fromActions.Update) =>\r\n        this.httpClient.put<ProductResponse>(`${environment.url}/api/Producto/${action.id}`, action.product)\r\n          .pipe(\r\n            delay(1000),\r\n            map((product: ProductResponse) => new fromActions.UpdateSuccess(product)),\r\n            catchError(err => of(new fromActions.UpdateError(err.message)))\r\n          )\r\n      )\r\n    )\r\n  );\r\n\r\n\r\n\r\n  read: Observable<Action> = createEffect(() =>\r\n    this.action.pipe(\r\n      ofType(fromActions.Types.READ),\r\n      map((action: fromActions.Read) => action.id),\r\n      switchMap((id: string) =>\r\n        this.httpClient.get<ProductResponse>(`${environment.url}/api/Producto/${id}`)\r\n          .pipe(\r\n            delay(1000),\r\n            map((product: ProductResponse) => new fromActions.ReadSuccess(product)),\r\n            catchError(err => of(new fromActions.ReadError(err.message)))\r\n          )\r\n      )\r\n    )\r\n  );\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n","import { ProductResponse } from \"./save.models\";\r\nexport { ProductResponse} from \"./save.models\";\r\nimport * as fromActions from './save.actions';\r\nimport { from } from \"rxjs\";\r\n\r\nexport interface ListState {\r\n  product: ProductResponse | null;\r\n  loading: boolean | null;\r\n  error : string | null;\r\n}\r\n\r\nexport const initialState: ListState = {\r\n  product: null,\r\n  loading: null,\r\n  error: null\r\n}\r\n\r\nexport function reducer(state : ListState = initialState, action: fromActions.All | any) {\r\n\r\n      switch(action.type){\r\n        //CREATE\r\n        case fromActions.Types.CREATE: {\r\n          return {...state, loading: true, error: null};\r\n        }\r\n\r\n        case fromActions.Types.CREATE_SUCCESS: {\r\n          return {...state, loading: false, error: null, product: action.product};\r\n        }\r\n\r\n        case fromActions.Types.CREATE_ERROR: {\r\n          return {...state, loading: false, error: action.error, product: null};\r\n        }\r\n\r\n        //UPDATE\r\n        case fromActions.Types.UPDATE: {\r\n          return {...state, loading: true, error: null};\r\n        }\r\n\r\n        case fromActions.Types.UPDATE_SUCCESS: {\r\n          return {...state, loading: false, error: null, product: action.product};\r\n        }\r\n\r\n        case fromActions.Types.UPDATE_ERROR: {\r\n          return {...state, loading: false, error: action.error, product: null};\r\n        }\r\n\r\n        //READ\r\n        case fromActions.Types.READ: {\r\n          return {...state, loading: true, error: null};\r\n        }\r\n\r\n        case fromActions.Types.READ_SUCCESS: {\r\n          return {...state, loading: false, error: null, product: action.product};\r\n        }\r\n\r\n        case fromActions.Types.READ_ERROR: {\r\n          return {...state, loading: false, error: action.error, product: null};\r\n        }\r\n\r\n        default: {\r\n          return state;\r\n        }\r\n\r\n      }\r\n\r\n\r\n\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///"}